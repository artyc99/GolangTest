version: "3.9"

services:
  postgres_test:
    container_name: postgres_test
    image: postgres:15.2-alpine3.17
    environment:
      POSTGRES_DB: "postgres_test"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./postgresql/db_init_scripts/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - ./postgresql/postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres_test"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      inner_bot_net:

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      - DB_CONNECTION=host=postgres_test port=5432 user=admin password=admin dbname=postgres_test sslmode=disable TimeZone=Europe/Moscow
      - CONFIG_FILE_PATH=./configs/dev.yaml
    ports:
      - "3000:3000"
    depends_on:
      postgres_test:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:3000/api/health-check || exit 1
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      inner_bot_net:

networks:
  inner_bot_net:
